/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  Settlement,
  SettlementInterface,
} from "../../../../contracts/mocks/MockSymbiotic.sol/Settlement";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_valSetDriver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_networkId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "messageHash",
        type: "bytes32",
      },
    ],
    name: "MessageVerified",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "headerHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "commitValSetHeader",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestValSetHeader",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "networkId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "valSetDriver",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "verifiedMessages",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "messageHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "aggregatedSignature",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "nonSignerPubkeys",
        type: "bytes",
      },
    ],
    name: "verifySignature",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60803461007c57601f6103e638819003918201601f19168301916001600160401b0383118484101761008157808492604094855283398101031261007c5780516001600160a01b038116919082900361007c5760200151600080546001600160a01b03191690921790915560015560405161034e90816100988239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060408181526004918236101561001657600080fd5b600092833560e01c91826325461f97146102c1575081633cf7f1d414610294578163447a85ad1461016b57816357f902661461012b578163807f0015146100885750639025e64c1461006757600080fd5b346100845781600319360112610084576020906001549051908152f35b5080fd5b839150346100845760603660031901126100845767ffffffffffffffff602435818111610127576100bc90369084016102e5565b93905060443591821161012457506100d790369083016102e5565b505081156100ed57506060602092519110158152f35b606490602084519162461bcd60e51b83528201526011602482015270496e76616c6964207369676e617475726560781b6044820152fd5b80fd5b8380fd5b8284346101245780600319360112610124575080517f22f61eadfcff829586536986646e329f03919b7b141a1b4abaa1a40d34377a388152436020820152f35b91905034610290576060366003190112610290576024359160443567ffffffffffffffff811161028c576101a290369083016102e5565b905081351561025957831561022557156101f3575081835260026020528220805460ff191660011790557ff65aea98e3eaaf8cdd33426df17164f43ba0394e5e0cd679bbfb1d3120b0541e8280a280f35b6020606492519162461bcd60e51b8352820152600d60248201526c24b73b30b634b210383937b7b360991b6044820152fd5b506020606492519162461bcd60e51b8352820152600e60248201526d24b73b30b634b2103432b0b232b960911b6044820152fd5b506020606492519162461bcd60e51b8352820152600d60248201526c092dcecc2d8d2c840cae0dec6d609b1b6044820152fd5b8480fd5b8280fd5b905034610290576020366003190112610290578160209360ff923581526002855220541690519015158152f35b84903461008457816003193601126100845790546001600160a01b03168152602090f35b9181601f840112156103135782359167ffffffffffffffff8311610313576020838186019501011161031357565b600080fdfea2646970667358221220a3112cb9e3f14435be74ac76a1e7644f2dbd2bbe8faf1016864de2e51d0dddee64736f6c63430008160033";

type SettlementConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SettlementConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Settlement__factory extends ContractFactory {
  constructor(...args: SettlementConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _valSetDriver: AddressLike,
    _networkId: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _valSetDriver,
      _networkId,
      overrides || {}
    );
  }
  override deploy(
    _valSetDriver: AddressLike,
    _networkId: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_valSetDriver, _networkId, overrides || {}) as Promise<
      Settlement & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Settlement__factory {
    return super.connect(runner) as Settlement__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SettlementInterface {
    return new Interface(_abi) as SettlementInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Settlement {
    return new Contract(address, _abi, runner) as unknown as Settlement;
  }
}
