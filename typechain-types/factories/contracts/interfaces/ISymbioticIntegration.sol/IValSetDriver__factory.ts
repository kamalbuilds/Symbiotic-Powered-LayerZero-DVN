/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IValSetDriver,
  IValSetDriverInterface,
} from "../../../../contracts/interfaces/ISymbioticIntegration.sol/IValSetDriver";

const _abi = [
  {
    inputs: [],
    name: "getCurrentValidatorSet",
    outputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "validators",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "votingPowers",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "totalVotingPower",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "epoch",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "merkleRoot",
            type: "bytes32",
          },
        ],
        internalType: "struct IValSetDriver.ValidatorSet",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
    ],
    name: "getValidatorSetAt",
    outputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "validators",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "votingPowers",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "totalVotingPower",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "epoch",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "merkleRoot",
            type: "bytes32",
          },
        ],
        internalType: "struct IValSetDriver.ValidatorSet",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "validators",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "votingPowers",
        type: "uint256[]",
      },
    ],
    name: "updateValidatorSet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IValSetDriver__factory {
  static readonly abi = _abi;
  static createInterface(): IValSetDriverInterface {
    return new Interface(_abi) as IValSetDriverInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IValSetDriver {
    return new Contract(address, _abi, runner) as unknown as IValSetDriver;
  }
}
